// Code generated by vfsgen; DO NOT EDIT.

package sqlitestore

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/sql": &vfsgen۰DirInfo{
			name:    "sql",
			modTime: time.Date(2020, 12, 3, 8, 18, 2, 8711659, time.UTC),
		},
		"/sql/migrations": &vfsgen۰DirInfo{
			name:    "migrations",
			modTime: time.Date(2020, 12, 10, 18, 56, 33, 109743082, time.UTC),
		},
		"/sql/migrations/001-init.sql": &vfsgen۰CompressedFileInfo{
			name:             "001-init.sql",
			modTime:          time.Date(2020, 12, 11, 19, 8, 36, 931755289, time.UTC),
			uncompressedSize: 1370,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xbc\x53\xc1\x4e\xc3\x30\x0c\xbd\xf7\x2b\x7c\xdb\x2a\xed\x0f\x10\x07\x84\x76\xe0\x30\x84\xc6\x38\x21\x14\x79\xab\xdb\x85\xa5\x49\x71\x5c\xd8\xfe\x1e\xb5\x69\x4b\xb7\x95\xa9\x1c\xd8\x31\xf1\xb3\xfd\xde\xcb\x4b\xc1\x98\xe5\x08\xa9\x63\xd2\x99\x55\x3b\x3a\x78\xb8\x05\x67\x6f\xa2\x68\xc3\x84\x42\x20\xb8\x36\x04\x3a\x05\xeb\x04\x68\xaf\xbd\x78\x28\xd9\x78\x98\x46\x00\x00\x3a\x01\xa1\xbd\xd4\x55\x5b\x1a\x03\x05\xeb\x1c\xf9\x00\x3b\x3a\xcc\x6a\x44\xc9\xe6\x04\x52\x5a\xfd\x51\x52\xa8\x8a\x16\x43\x75\x3d\x9c\xc3\xd6\x44\xa1\x80\xe8\x9c\xbc\x60\x5e\x40\x42\x29\x96\x46\xe0\xfe\x65\xb9\x9c\x3f\xae\xd4\xea\x61\x31\x7f\x5e\xdd\x2d\x9e\x9a\x0d\x45\x72\xd6\x13\xc5\x97\x25\x08\x66\xe3\x25\x58\xcc\xe9\x82\x86\x6b\x71\x2e\x3d\xf1\x78\xd2\x94\xa3\xbe\xe4\x7c\x81\xde\x7f\x39\x4e\xd4\x16\xfd\xf6\x18\x17\x00\x58\x68\x25\x6e\x47\xb6\xf7\x3c\x94\xaf\x29\x51\x1b\x67\x85\xac\xc0\xda\x39\x43\x68\x7f\xe6\xb7\xa2\x53\x34\xbe\x5d\xa3\xad\xad\x5a\x50\x28\x73\xac\xc9\xc3\xbb\x77\xb6\x43\x4e\x5e\xdf\x26\xd7\x77\x51\xfd\x2d\xc1\x55\xc7\x29\xac\x0b\xf7\x2f\x95\xd3\x60\xa7\xf8\xe9\x58\x0b\x8d\x32\xad\x4e\xe7\x3f\xfb\xd4\xd0\x0a\x3f\xbf\x12\x3b\x6d\x74\xc6\xc0\x94\x12\x93\xdd\x50\x93\xb9\xa9\x4e\xe2\x01\x78\xad\xfd\x18\xcd\xa6\x07\x0e\x69\x6b\xc7\xce\x1a\xb3\xe2\xb1\x0f\xa4\xba\x3f\xda\xdd\x0c\x59\x2d\x98\x0d\xde\x9f\x29\x1b\xe2\xdb\x66\xa1\x25\xdd\x6f\x0a\x83\x8f\xf0\x15\xa3\x16\xda\x57\x17\x46\xcf\x1a\x2e\xb5\xc2\xef\x00\x00\x00\xff\xff\x75\x2c\xa0\xd2\x5a\x05\x00\x00"),
		},
		"/sql/migrations/migrations-table.sql": &vfsgen۰FileInfo{
			name:    "migrations-table.sql",
			modTime: time.Date(2020, 11, 30, 5, 25, 19, 259532019, time.UTC),
			content: []byte("\x63\x72\x65\x61\x74\x65\x20\x74\x61\x62\x6c\x65\x20\x69\x66\x20\x6e\x6f\x74\x20\x65\x78\x69\x73\x74\x73\x20\x6d\x69\x67\x72\x61\x74\x69\x6f\x6e\x73\x20\x28\x0a\x20\x20\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x74\x65\x78\x74\x20\x70\x72\x69\x6d\x61\x72\x79\x20\x6b\x65\x79\x2c\x0a\x20\x20\x20\x20\x63\x72\x65\x61\x74\x65\x64\x5f\x61\x74\x20\x74\x69\x6d\x65\x73\x74\x61\x6d\x70\x20\x6e\x6f\x74\x20\x6e\x75\x6c\x6c\x20\x64\x65\x66\x61\x75\x6c\x74\x20\x43\x55\x52\x52\x45\x4e\x54\x5f\x54\x49\x4d\x45\x53\x54\x41\x4d\x50\x0a\x29\x3b\x0a"),
		},
		"/sql/queries.sql": &vfsgen۰CompressedFileInfo{
			name:             "queries.sql",
			modTime:          time.Date(2020, 12, 12, 0, 12, 52, 776294577, time.UTC),
			uncompressedSize: 5590,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x57\x4d\x6f\xdb\x46\x13\xbe\xf3\x57\xcc\x0b\xbc\x00\x49\x83\x61\x0e\xbd\xa9\x55\x05\xc7\x35\x82\x00\x71\x10\xb8\xf6\xa9\x28\x88\xb5\x38\x92\xd7\xa5\x48\x65\x3f\xec\xea\xdf\x17\x3b\xb3\xa4\x96\x34\x45\x49\x09\xd0\xa0\x45\x2f\x22\xb9\x3b\x3b\x3b\xf3\xcc\x33\x1f\x7a\xf3\x06\xb4\x5d\xa9\x59\x29\x45\x85\x4b\x03\xfa\x4b\x25\x0d\xfe\x10\x45\xed\xc6\x46\x6c\x8b\x2f\x16\xd5\x0e\xee\xc4\xfa\x46\xd4\x62\x8d\x2a\xbf\x52\x28\x0c\x46\xb2\xd6\xa8\x0c\x34\x0a\xe4\xba\x6e\x14\x82\xac\x4d\x03\x46\xac\x35\x24\xb2\xcc\xa0\x16\x1b\xcc\x60\x49\xc2\x65\x21\x4c\x06\x76\x5b\xfa\xf7\x34\x7a\x16\x95\x45\x0d\xc9\xcc\x89\xce\x58\x76\x16\x0a\xcf\x42\xe9\x69\x83\xde\xa3\x79\xb7\xfb\xf0\x4b\xa4\xd1\x79\x11\x01\xc8\x32\x8b\x80\x0d\x88\x20\x34\x21\x82\xc0\x88\x68\xa5\x9a\x0d\x19\x1c\xbd\x3c\xa2\x73\xa0\x84\x39\x2c\x4e\xb9\xec\x93\xd8\xe0\x37\x5f\xe7\x0e\x1c\xba\xf0\xfe\xf6\xe3\x49\x70\x5b\x55\xe9\x08\x18\x70\xab\xaa\x0c\x8c\x34\xd5\x51\xd8\xdd\x09\x06\x9e\xce\xcc\xfc\xa1\xb3\xf0\x0f\x2c\x24\x48\xee\x6f\x3f\x7a\x44\x80\x20\x01\xa1\x3d\x30\x56\x55\xee\xc3\x5d\x15\x01\x1b\xe8\xbe\xf9\xd2\x1e\x60\x6e\xf9\x10\x7c\xa4\x62\x00\x26\x79\xcf\x60\xba\x4b\x0e\x61\xa9\x51\x8d\x83\xc9\x10\x6a\x54\x1d\x86\xb8\x11\xb2\xca\x60\x2b\xb4\x7e\x69\x54\x59\x3c\x0a\xfd\x78\x3a\x9a\xfe\xf4\x6c\x70\xfc\x3c\x5c\x03\x6b\xef\x49\xf4\xb3\xac\x6b\x2c\xaf\x84\xc1\x75\xa3\x24\xea\x88\x35\x74\x86\x6b\x34\xb0\x25\x99\x62\xd9\x09\xc1\x1c\x12\xda\xf3\x1c\x05\x78\xd2\x4d\x5d\xac\x55\x63\xb7\x85\x50\x4a\xec\x12\x5a\xf5\xeb\xcd\xc3\x13\x2e\x4d\x12\x57\xe2\x01\xab\x38\x03\x7a\x66\x10\x3b\xba\xc6\x19\xb1\x36\x4d\x23\x00\x82\x9d\x4f\x06\xaa\xbd\x12\xfc\xd3\x28\xb1\x34\xc9\x52\x18\x9d\x13\x36\x19\xc4\xff\xcf\x59\x67\xea\x02\xc8\x6a\xc3\x33\x23\x06\x0d\x4c\x92\x65\x9c\x75\x3b\x83\x9b\xa4\xc1\x4d\x78\x95\x2c\xe3\x34\xa5\x9b\x28\xcf\x9c\x3c\x59\xcc\x87\xc4\xf2\x31\x71\x6f\xc9\x22\x4d\xc1\x19\xc9\xb8\x34\xb2\x0e\x04\x06\xc6\x3b\x3d\x39\x5d\x13\xa7\x40\x4f\x3a\x44\x66\xc3\xc3\xee\x14\xc7\xd3\xf4\x68\x7d\x09\x83\x4e\xd9\x74\xed\x98\xb4\xaf\x30\x14\xea\xbc\x97\x54\xb4\x42\x84\x73\x8b\xcc\xbc\x6e\xbd\x47\x40\xb7\xdf\x67\xa4\x4b\xba\x46\x54\xa8\x97\xc8\xa0\xd7\xb6\xaa\xe4\x2a\xe1\xc3\x62\x2b\x0b\xd3\xfc\x81\x75\x06\x71\x9c\xba\x9f\x08\x80\x40\xdd\xef\x04\x16\x3c\x38\xde\x35\xb5\xc1\xda\xb0\x25\xc1\xc2\x5e\x6e\x32\xc9\x49\xe2\x48\xaa\x13\xd9\x7d\xae\x07\xbe\xcf\x61\xf1\xe3\x49\x88\x86\xfd\xe1\x5c\x38\xbf\x9f\x93\x4c\x99\xa3\x1e\xae\xd1\xbc\xaa\x12\x9d\xb7\xe7\xe6\x66\x3f\xfb\x88\xfa\xd9\xbe\x82\xbc\xae\x1d\x1a\x4d\xf2\x64\x02\xa5\xae\xb1\xb9\xa2\x41\x2f\x29\x89\xa6\x2d\x85\x28\x2f\x03\x67\x2b\x5c\x99\x61\x0a\x7a\x0e\x0f\x4b\x9a\xcf\xd9\xb1\x13\x53\x2e\x52\x09\x4b\x53\x78\x32\xc1\x51\x1a\x53\x0c\x34\x35\x18\xc6\xb8\xa7\xa1\xe7\x8d\xab\x29\x23\x31\x01\x51\x97\x70\xc0\x52\xf8\xdf\x1c\xe2\xdf\x7e\x8f\x0f\x85\xed\x60\x77\xef\x1a\x52\xd1\x6b\xec\x6e\xc1\x77\x78\x7a\xfa\x7e\xbd\x12\xcf\x8d\x92\xe6\x9c\x76\xaf\x51\xe5\x6d\xe3\xe7\x97\xb6\xf7\xef\x95\x9d\xdd\xae\x02\x77\xb8\x63\x85\x1d\xaa\xf5\xc4\x75\x29\xa2\x02\x0f\x00\xf3\xf6\x66\x2e\xd2\xfe\x72\xb7\xdc\x19\x42\x3b\x41\xc2\xcc\xe1\xea\xfe\xf6\xf6\xfa\xd3\x5d\x71\xf7\xe1\xe6\xfa\xd7\xbb\xcb\x9b\xcf\x41\x5c\x0a\x0a\x4b\xeb\x21\x45\x87\x57\x64\x79\x82\xdd\xcb\x0a\x85\xba\x73\xdc\x2c\xb1\x42\x83\xd0\x51\xd4\xd9\x5f\x10\x5d\x82\xbb\x38\x10\x53\xd5\x3c\xd0\xcd\x2e\x90\xf2\xb1\x30\x17\xbe\x55\x25\x81\x66\xea\xb8\x85\x2c\xc3\x08\x2e\x32\x58\x9c\x12\x82\xf7\x68\x2e\xab\xb0\x77\xd8\x7e\xa5\xf3\x5f\x31\x33\x20\xe6\x35\x3f\xa3\xd1\xa2\x55\x95\x5f\xed\x66\x35\x5a\xa7\x2f\xde\xb1\x79\x0b\x39\x6d\x32\xe6\xed\xd6\xc8\x84\x37\xda\x6c\xbc\x24\x77\x19\x0e\x36\xaf\xb4\xb5\xa2\x44\x25\x9f\xb1\x2c\x3a\x3d\xd3\x95\xe9\xd8\x6c\xe3\x2c\xa4\x74\xcf\x20\x3e\x56\xa2\xbc\x2b\x1d\x2f\x85\x86\x90\x97\xd6\xe6\x83\xea\x6e\xf3\x41\x31\xf7\x25\x9f\xe8\x0f\xd6\x46\x54\x76\xf8\xc3\x95\x1d\xcb\x65\xc4\x12\xf4\x85\x2c\xfd\x7e\x8f\x70\x96\x0a\x94\x35\x79\x9f\x73\x14\xd0\x68\xbc\x8c\x59\x93\x33\x73\xda\xcc\xd8\x47\xca\x91\xb5\x1b\x5b\x58\xc7\xa9\x64\xba\x5c\x19\x54\xc1\x74\x4f\xfe\x5e\x04\xd0\x8f\xc5\xe4\xac\x01\x6f\x22\x2e\x1c\x99\x57\xed\x63\x30\xdd\xaa\xe6\xa5\xa8\xed\xe6\x01\x55\x92\x42\xf3\x8c\x0a\xda\xdb\x1a\x55\xa2\xea\x7c\x26\x2d\xaa\x79\xc9\x5a\x37\xc2\xdc\x18\xcf\x8e\x43\xf9\x31\x95\x21\x93\x39\x72\x20\x4b\x86\x79\x32\x95\x29\x61\xae\x1c\xca\x96\x49\x06\x0f\x38\xfc\x7a\x5e\x19\x70\x7a\x30\xae\xf0\x5c\xcd\x62\x21\xcb\xfd\x38\x3d\xc1\x73\x80\x51\x66\x92\x0b\xd6\x06\x2d\xfa\x8c\x5c\x98\xe8\xeb\xc3\x84\x50\xcd\x0b\xfc\xec\xbb\xb7\x7b\xff\xe9\x6b\xd3\x82\xfe\xf1\xf6\x86\xca\xff\xea\xec\xd7\xd5\xd9\xb7\x17\xfc\x77\xca\xcd\xd3\x4b\x61\x12\x2f\xdc\x89\xc0\xc5\xdb\x7f\x65\x35\xe6\x09\xb2\xbd\xf2\x5b\xea\xf3\xbb\x1d\x4d\x17\xdf\x89\x8a\x1d\xeb\x46\x09\xd7\xea\x4c\x7b\x4c\x9d\x88\xe6\xdf\xde\xe4\xff\x21\xdc\x19\x10\x87\xc4\x64\x9d\x2c\xd2\x21\x6b\xfe\x0a\x00\x00\xff\xff\x40\xbc\xb4\xce\xd6\x15\x00\x00"),
		},
		"/sql/sqlite3": &vfsgen۰DirInfo{
			name:    "sqlite3",
			modTime: time.Date(2020, 12, 11, 19, 29, 45, 870706517, time.UTC),
		},
		"/sql/sqlite3/.keep": &vfsgen۰FileInfo{
			name:    ".keep",
			modTime: time.Date(2020, 12, 3, 8, 10, 13, 164846303, time.UTC),
			content: []byte(""),
		},
		"/sql/sqlite3/TagManager.Create.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "TagManager.Create.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 157,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\xcc\xb1\x0e\x82\x30\x10\x87\xf1\x9d\xa7\xf8\x8f\x98\x14\x1e\xa0\x8e\xe2\xe0\x22\x0b\x3b\x39\xec\xa5\x69\xac\xad\x5e\xaf\x1a\xdf\xde\x10\x19\xd8\xbe\xe1\x97\xaf\xeb\x70\xca\x8e\xe1\x39\xb1\x90\xb2\xc3\xf2\xc5\x52\x43\x74\x73\x79\xc5\x9e\x3e\xf7\x23\x86\x11\xd7\x71\xc2\x79\xb8\x4c\x7d\x13\x52\x61\x51\x64\x41\xf0\x29\x0b\x23\x24\xcd\x50\xf2\x05\x6d\x70\x06\x89\x1e\x6c\x70\x13\x5e\x67\x33\xa9\x41\x7d\xba\xad\x0f\xcd\x9b\x62\xe5\x82\xd6\xae\xd4\xfe\xad\xdd\x63\xbb\xd7\xbf\x00\x00\x00\xff\xff\xd2\x6f\x3c\x02\x9d\x00\x00\x00"),
		},
		"/sql/sqlite3/TagManager.GetByID.generated.sql": &vfsgen۰FileInfo{
			name:    "TagManager.GetByID.generated.sql",
			modTime: time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			content: []byte("\x2d\x2d\x20\x43\x6f\x64\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x62\x79\x20\x62\x75\x69\x6c\x64\x5f\x73\x71\x6c\x2e\x61\x77\x6b\x3b\x20\x44\x4f\x20\x4e\x4f\x54\x20\x45\x44\x49\x54\x2e\x0a\x73\x65\x6c\x65\x63\x74\x0a\x20\x20\x69\x64\x2c\x0a\x20\x20\x6e\x61\x6d\x65\x2c\x0a\x20\x20\x63\x72\x65\x61\x74\x65\x64\x5f\x61\x74\x2c\x0a\x20\x20\x75\x70\x64\x61\x74\x65\x64\x5f\x61\x74\x0a\x66\x72\x6f\x6d\x20\x74\x61\x67\x73\x0a\x77\x68\x65\x72\x65\x20\x69\x64\x20\x3d\x20\x3f\x0a"),
		},
		"/sql/sqlite3/TagManager.GetByName.generated.sql": &vfsgen۰FileInfo{
			name:    "TagManager.GetByName.generated.sql",
			modTime: time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			content: []byte("\x2d\x2d\x20\x43\x6f\x64\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x62\x79\x20\x62\x75\x69\x6c\x64\x5f\x73\x71\x6c\x2e\x61\x77\x6b\x3b\x20\x44\x4f\x20\x4e\x4f\x54\x20\x45\x44\x49\x54\x2e\x0a\x73\x65\x6c\x65\x63\x74\x0a\x20\x20\x69\x64\x2c\x0a\x20\x20\x6e\x61\x6d\x65\x2c\x0a\x20\x20\x63\x72\x65\x61\x74\x65\x64\x5f\x61\x74\x2c\x0a\x20\x20\x75\x70\x64\x61\x74\x65\x64\x5f\x61\x74\x0a\x66\x72\x6f\x6d\x20\x74\x61\x67\x73\x0a\x77\x68\x65\x72\x65\x20\x6e\x61\x6d\x65\x20\x3d\x20\x3f\x0a"),
		},
		"/sql/sqlite3/URLManager.Create.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "URLManager.Create.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 174,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\xcc\x31\x8e\xc2\x30\x10\x46\xe1\xde\xa7\xf8\xcb\x5d\xc9\xc9\x01\x4c\x49\x28\x68\x48\x93\x3e\x72\xf0\x28\x1a\x61\xd9\x30\x1e\x83\xb8\x3d\x72\x94\x22\xdd\x6b\xbe\xd7\x75\x38\xe7\x40\x58\x29\x91\x78\xa5\x80\xe5\x8b\xa5\x72\x0c\x73\x79\xc5\xde\x7f\x1e\x27\x0c\x23\x6e\xe3\x84\xcb\x70\x9d\x7a\xc3\xa9\x90\x28\xb2\x80\xd7\x94\x85\xc0\x49\x33\xaa\xc4\x62\x80\x3f\x0e\xb6\xb5\x85\xb2\x46\xb2\xb8\x0b\xb5\xe9\xec\xd5\xa2\x3e\xc3\xde\xff\xe6\xed\x63\xa5\x4d\xb8\x46\xdc\x66\xdc\x8e\xdc\x51\xb9\x23\xfb\x05\x00\x00\xff\xff\x41\x74\x22\xa6\xae\x00\x00\x00"),
		},
		"/sql/sqlite3/URLManager.GetByURL.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "URLManager.GetByURL.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 180,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\xcd\x31\xce\xc2\x30\x0c\x05\xe0\xdd\xa7\x78\x07\xf8\xdb\x0b\xfc\x42\x0c\x94\x81\x85\x2e\xdd\xab\xb4\x36\x10\x61\x28\x38\x89\x2a\x6e\x8f\x9c\xa5\x6c\xfe\x9e\xe5\xe7\xa6\xc1\x61\x61\xc1\x55\x9e\x62\x21\x0b\x63\xfa\x60\x2a\x51\x79\x4c\x6f\x6d\xc3\x7a\xff\x47\xd7\xe3\xdc\x0f\x38\x76\xa7\xa1\xa5\x24\x2a\x73\x06\x01\x91\x11\x12\x22\xff\x11\x50\x4c\x1d\xc5\xd4\x95\x63\x56\x71\xd7\xc1\x93\xd9\xc4\xcb\xc7\x90\x3d\xde\x54\x6f\x5f\xfc\xb3\xdb\x44\x17\x5b\x1e\x5e\x99\x68\xbd\x89\x49\x7d\xb2\xc3\x9e\xbe\x01\x00\x00\xff\xff\xc4\xcb\xe7\x40\xb4\x00\x00\x00"),
		},
		"/sql/sqlite3/UserManager.Create.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserManager.Create.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 185,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x5c\xcc\xb1\xae\x82\x30\x14\x87\xf1\x9d\xa7\xf8\x8f\xf7\x26\x85\x07\xa8\xa3\x38\xb8\xc8\xc2\x4e\x0e\x9e\x13\x69\xac\x2d\xf6\xb4\x12\xdf\xde\x60\x18\x88\xdb\xb7\xfc\xbe\xba\xc6\x31\xb2\xe0\x26\x41\x12\x65\x61\x8c\x6f\x8c\xc5\x79\x1e\xf4\xe9\x1b\x5a\xee\x07\xb4\x1d\x2e\x5d\x8f\x53\x7b\xee\x9b\xca\x05\x95\x94\xe1\x42\x8e\x28\x2a\x49\x2b\xe0\xcf\xb1\x81\x3c\xc8\x79\x83\x99\x54\x97\x98\x78\x98\x48\x27\x83\x6b\x92\xf5\x3a\x50\x36\x28\x33\x6f\xfd\x5f\xbd\xc8\x17\xf9\x5a\xbb\x62\xbb\x69\xfb\xc3\xed\xde\xdb\xfd\xe0\x13\x00\x00\xff\xff\x84\x9d\x5e\x3a\xb9\x00\x00\x00"),
		},
		"/sql/sqlite3/UserManager.GetByEmail.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserManager.GetByEmail.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 345,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x54\x8f\xb1\x6e\xc2\x30\x10\x86\x77\x3f\xc5\xbf\x01\x12\xe4\x05\x50\xd5\xa1\x74\xe8\x52\x16\x76\xeb\xe2\x3b\x1a\x0b\x63\xa7\x3e\x47\x51\xdf\xbe\x32\x91\x70\x58\x2c\xdf\x77\x9f\xad\xff\x3f\x1c\xf0\x91\x58\xf0\x23\x51\x32\x15\x61\xf4\x7f\xe8\x27\x1f\xd8\xea\x6f\xe8\x68\xbe\x1d\x71\x3a\xe3\xfb\x7c\xc1\xe7\xe9\xeb\xd2\x19\x95\x20\xae\x18\x60\x52\xc9\xda\x79\x06\x29\x3c\xef\x9f\x44\xee\xe4\x43\x85\x8f\x4b\xe3\x23\xa9\xce\x29\xb3\x1d\x48\x87\xba\x7f\x01\xd5\x73\x89\x82\xa8\x93\xad\x01\x80\x38\x85\xe0\xaf\xdb\xe5\x31\x8d\xde\x96\x74\x93\xb8\xc7\x66\xb3\xab\x87\x01\x76\xf5\x97\xb6\x59\x25\xe8\x85\xad\x4b\xb1\x48\x2c\x4b\x92\x15\x68\x9e\xcb\x52\x1b\x5b\x7a\x48\x6d\x6a\xc6\x34\xf2\xca\x68\x93\xb9\xe6\x74\x5f\x1c\x33\x0f\x92\xe5\xa5\xfb\x1b\xde\x8f\xe6\x3f\x00\x00\xff\xff\x50\x39\x47\xdb\x59\x01\x00\x00"),
		},
		"/sql/sqlite3/UserManager.GetByID.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserManager.GetByID.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 236,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\x8e\x3b\x0e\x82\x40\x14\x45\xfb\x59\xc5\x5d\x80\xb0\x01\x62\x2c\xc4\xc2\x46\x1a\x7a\x32\xf0\xae\x3a\x71\x00\x9d\x4f\x88\xbb\x37\x40\xe2\x4c\xf7\xee\x79\xa7\x38\x45\x81\xf3\x2c\xc4\x83\x13\x9d\x0e\x14\xf4\x5f\xf4\xd1\x58\xe9\xfc\xc7\x96\x7a\x79\x55\xa8\x1b\xdc\x9a\x16\x97\xfa\xda\x96\xca\xd3\x72\x08\x0a\x88\x9e\xce\x97\x46\xa0\x3d\x8c\x1c\xfe\x84\xa3\x36\x76\x85\xdb\x91\xf3\x9e\xd2\x0d\xf3\x14\x38\x85\xfd\x9f\x81\xe4\x0d\x8e\x6b\x47\xa7\x37\x29\xad\x64\xc4\xb7\x64\x46\x5a\xea\xee\xe6\x71\x77\xd4\xf2\xa4\x63\x6a\x3c\xe2\x54\xa9\x5f\x00\x00\x00\xff\xff\x2f\xcb\xee\x41\xec\x00\x00\x00"),
		},
		"/sql/sqlite3/UserManager.UpdatePinnedCategories.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserManager.UpdatePinnedCategories.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 496,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\x91\xb1\x6e\xf3\x20\x14\x85\x77\x9e\xe2\x0c\xbf\x04\x48\x8e\x5f\xe0\x57\x94\xa1\xe9\xd0\xa5\x59\xb2\x5b\xd7\x70\xeb\x90\x12\x93\x02\x6e\x9a\xb7\xaf\xc0\x51\x65\x59\x1d\x3a\x1d\xeb\x5e\x9f\x73\x3e\x60\xb3\xc1\x53\xb0\x8c\x81\x47\x8e\x94\xd9\xa2\xbf\xa3\x9f\x9c\xb7\x5d\xfa\xf0\x2d\xdd\xde\xff\x63\x7f\xc0\xeb\xe1\x88\xe7\xfd\xcb\xb1\x15\xd3\xd5\x52\x66\x4c\x89\x63\x12\x40\xe2\x8c\xab\x1b\x47\xb6\x9d\xa1\xcc\x43\x88\x8e\x13\xb6\x50\x75\xe7\xd9\x64\x01\x00\xe7\x14\xc6\x6e\x88\x61\xba\x76\x14\x23\xdd\x55\x9d\x3e\xe6\xa1\x3f\xb3\xc9\x4a\x7a\xea\xd9\xcb\x06\x55\x1b\xc8\x4c\x43\x92\x0d\x8a\x68\x2d\x80\xb7\x18\x2e\x98\x9d\x8b\xe8\x47\x08\x7f\xe5\x48\x26\x2b\x43\x39\xb5\x9f\xe4\x27\x6e\x20\xff\xb5\x73\xa6\x06\xa5\x47\xec\xd2\xf3\x0b\xd0\x0a\xc9\x59\xd9\xfc\x6c\x56\x4d\x2e\xf3\x65\x59\xe5\xac\xd4\xba\x36\x15\xe2\xea\xaa\xc4\xb3\x89\xcc\x49\x95\x2f\xb5\xd3\x1a\x05\x72\xbe\x97\xe0\xc6\xc5\x0f\x2b\xf8\x92\xd3\xd6\x1a\xa9\x51\xb5\x9a\x2a\x76\x79\xa7\x3f\x1c\x5c\x6b\x71\x3b\x71\x64\x38\x8b\x2d\x76\xe2\x3b\x00\x00\xff\xff\x6d\x6e\x8f\x38\xf0\x01\x00\x00"),
		},
		"/sql/sqlite3/UserManager.getPinnedCategories.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserManager.getPinnedCategories.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 437,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x7c\x90\x41\x4f\x02\x31\x10\x85\xef\xfd\x15\xcf\xc4\xa4\xdb\x04\xfa\x07\x0c\xf1\x20\x1e\xbc\xc8\x85\x9b\x31\x64\xb6\x1d\xa0\x6b\x69\xb5\x1d\x44\xfe\xbd\xd9\x82\x09\x24\xea\xa5\x99\xbe\x79\xd3\xf9\x5e\xa7\x53\x3c\x64\xcf\xd8\x70\xe2\x42\xc2\x1e\xfd\x11\xfd\x3e\x44\xbf\xaa\x1f\xd1\xd2\xe1\xed\x0e\xf3\x05\x9e\x17\x4b\x3c\xce\x9f\x96\x56\x55\x8e\xec\x44\x01\x43\xcd\x69\xc5\x5f\x52\xc8\x49\xe7\x48\xaa\xfd\xa4\xb8\xe7\x09\xf4\xad\x8d\xd4\x73\xd4\x06\x54\xd1\xca\xc9\x8f\x3f\xf7\x03\x3b\xe9\x74\x10\xde\x55\x3d\xca\xe7\x06\x95\x42\xc7\xae\xdd\xcf\x4a\x65\xe9\x06\xb9\x78\x34\xd1\x8e\xf5\x04\xd2\x0a\xd3\xac\xe3\xd9\xb6\x08\x6d\xaa\x5a\x97\xbc\xc3\xbe\x72\xa9\x2a\xf2\x5a\x30\xe4\x90\xce\x98\xe4\xb6\x5d\xeb\xd8\xf7\x90\x12\xfb\x95\x23\xe1\x4d\x2e\x81\xab\xc1\x08\xff\xeb\xc4\x7f\x11\xc7\x8d\xda\x18\x0c\x72\x31\x3a\x8a\x10\xe4\x04\xb1\xc1\x63\x76\xfd\x49\x57\x69\x82\xd7\x46\x1d\xb6\x5c\xf8\x84\x7c\xf2\xdf\x83\x92\xc7\x1f\xa4\xb8\x99\x41\xbf\xbc\x6a\xf5\x1d\x00\x00\xff\xff\x3d\xab\xdf\xd2\xb5\x01\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.Create.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.Create.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 215,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x4c\xcd\xbd\xae\xc2\x30\x0c\x86\xe1\xbd\x57\xf1\x8d\xe7\x48\x69\x2f\x20\x8c\x94\x81\x85\x2e\xdd\xab\x94\x18\x64\x61\xb5\xe0\x38\x45\xdc\x3d\xea\x8f\x44\x27\xbf\xb2\xe4\xc7\x65\x89\xe3\x18\x09\x77\x1a\x48\x83\x51\x44\xff\x41\x9f\x59\x62\x97\x5e\x52\x85\xf7\xe3\x80\xba\xc1\xa5\x69\x71\xaa\xcf\x6d\x55\xf0\x90\x48\x0d\x3c\xd8\x88\x9c\x48\xbb\xac\x92\x0a\xe0\x8f\xa3\x5b\x17\x4b\xa8\x2c\xd3\xd8\x84\x1c\x6e\x61\x1a\x95\x8d\x1c\xae\x4a\xf3\x97\x2e\x98\x43\x7e\xc6\xad\xff\x8b\x29\x48\xa6\xc5\xf1\xf3\x9d\x9f\xa5\x6a\x2d\x95\x35\x36\xcb\xff\x30\xbf\xd7\xfc\x9e\xfb\x06\x00\x00\xff\xff\xd1\xfa\x72\x92\xd7\x00\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.GetAll.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.GetAll.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 597,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x5c\x52\xbf\x6e\xf3\x20\x10\xdf\xfd\x14\xb7\x11\x4b\x0e\x2f\xf0\x29\xfa\x86\xa6\x43\x97\x66\xc9\x8e\x88\xb9\xb8\xa4\xc4\xa4\xc7\x5d\xa2\xbc\x7d\x05\x06\x2b\xea\xc6\xef\x2f\xe6\xce\xdb\x2d\xbc\x45\x87\x30\xe1\x8c\x64\x19\x1d\x9c\x9e\x70\x12\x1f\x9c\x49\x3f\x41\xdb\xc7\xf7\x3f\xd8\x1f\xe0\xf3\x70\x84\xf7\xfd\xc7\x51\x77\x09\x03\x8e\xdc\x01\x88\x68\xef\xc0\x26\xf0\x6e\xc8\xb0\x22\x25\x14\xb4\x77\x6a\xe1\x84\xc2\x4a\x0a\x85\xca\xb2\xe7\x80\x2b\x5f\xd0\xa2\x88\x96\x84\x64\x5a\x53\x42\x5a\xab\x5e\x52\xe5\x90\xc9\x31\xda\x80\x69\xc4\x4d\x07\x00\x30\x4b\x08\xfe\xbc\x69\xce\x01\x94\xea\x87\xa2\x54\xa6\x03\xe8\x73\xde\x21\xf9\x3b\x3a\xb3\xf6\x5c\x52\x9c\x4d\x3c\x5d\x70\xe4\x8d\xf2\x8c\xd7\xa4\x96\x60\x11\x26\x8a\x72\x33\x96\xc8\x3e\x97\x8b\xfe\x06\x9c\x1a\x80\xb5\x77\x03\xa8\xd9\x5e\xb1\xa0\x7c\xe8\x8b\xbb\x6f\xd7\xb2\x9d\x52\x7d\xca\xd9\xde\x23\x79\x2e\xaf\x69\xe7\x2a\x8d\x84\x79\x0d\xc6\x72\x9b\xc8\xcd\x55\xa2\x3b\x53\xbc\x66\x32\xcf\x48\x28\x24\x10\xe9\x2e\xd1\xcf\xb0\x00\x88\xf3\xb2\x86\x5d\xc9\x51\x30\xde\x55\xbd\x26\x4c\xfe\x06\x10\x2e\x4e\xd6\x2b\xdd\x32\xcd\x5f\x6c\xc5\xc5\xb5\x8f\x35\xdb\x29\xf7\x3d\xbe\x90\xf0\x75\x53\x3b\xf8\xdf\x95\x11\xe5\x3f\x67\xe9\xf8\x0d\x00\x00\xff\xff\xac\x69\xc8\x83\x55\x02\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.GetAllAfter.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.GetAllAfter.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 794,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x5c\x52\xcb\x92\xdb\x20\x10\xbc\xf3\x15\x7d\x93\x9d\xd2\xf2\x03\xc9\x66\x0f\xd9\x1c\x72\xc9\x5e\xf6\x4e\x61\x31\x76\x70\xb0\xd8\x0c\x8c\x55\xfe\xfb\x14\x08\x3d\x6a\x4f\x9a\xe9\x6e\xba\x99\x41\x4f\x4f\xf8\x11\x1d\xe1\x42\x23\xb1\xcd\xe4\x70\x7a\xe0\x24\x3e\x38\x93\xfe\x05\x6d\xa7\xbf\x5f\xf1\xfa\x86\xdf\x6f\xef\xf8\xf9\xfa\xeb\x5d\xab\x44\x81\x86\x0c\x05\x00\x22\xfa\x4b\x5f\xab\x6b\x8a\xa3\x89\xa7\x2b\x0d\xf9\xd0\xf9\x4c\xb7\xd4\xcd\x44\xa3\x2e\x1c\xe5\xc3\x58\x66\xfb\x38\x34\xfc\xf3\x21\xd7\xf5\xc8\xda\xbb\x1e\xdd\x68\x6f\x54\xbb\x52\x1c\x9b\x7e\xfe\x1e\x61\x13\xb2\xbd\x24\x75\xe6\x78\x43\x31\x9b\x6f\x54\x59\x8e\x93\x19\xe5\x76\x22\x3e\x1c\x11\xef\xc4\x58\xd2\x22\x3b\xe2\x32\x9b\x88\xf6\xae\xba\x70\x9c\xfa\x65\x0c\xef\x0a\xe2\x5d\x03\x5a\xdf\x09\x07\x5d\x2e\xd6\x50\xe1\xb0\xc2\xc2\x61\xc5\xb3\xcf\x81\x56\xa6\x76\xdd\x6a\x2d\x89\xd8\x2c\x7e\x89\x78\x67\xb8\x3b\x59\x8b\x19\x1e\xa2\x0d\x94\x06\x5a\xae\x3e\x4a\x08\xfe\x7c\x58\xd4\x3d\xba\xee\xb8\x2c\xb7\x61\xdb\x6a\x1c\xb1\xbf\x93\x33\x3b\x3f\x11\x7d\xb6\xf7\xc8\x3e\xd7\xa4\xa5\x5e\xc9\x81\xa9\x3c\xbc\xb1\xb9\xd0\x5b\xb7\x4d\xf0\xe1\x76\x82\xad\x53\x40\x79\x84\x59\x56\xa6\x14\x0e\x09\x22\x0a\xb8\x46\x3f\x62\x6e\x11\xc7\x79\xa1\xcf\xd5\x8b\x83\xf1\x4e\x01\xd3\x1f\x62\xda\xef\xe7\x19\x2f\xaa\x8e\x20\xa2\x02\x9d\x73\xf3\x68\xbe\xa6\xbc\x39\x24\x57\xb7\xac\x57\x78\xf1\xf5\x6e\x77\xa8\x6a\xab\x34\xb7\xe0\xac\xb3\xbd\x94\xe0\x39\x96\xe3\x84\xef\x78\x81\x1d\x5d\xad\xbf\x95\xf0\xfa\x8f\xae\xbf\x88\xfa\x1f\x00\x00\xff\xff\x9f\x15\x51\x40\x1a\x03\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.GetAllByTags.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.GetAllByTags.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 568,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x5c\x92\x3d\x8e\xe3\x30\x0c\x85\x7b\x9f\x82\x9d\x6d\xc0\xd1\x05\x16\x41\x8a\xcd\x16\xdb\x6c\x9a\xf4\x82\x62\x31\x5e\x65\x14\x29\x43\x91\x13\xe4\xf6\x03\xfd\xa5\x98\xc6\x10\x3f\xbe\xf7\x28\x11\xde\xed\xe0\x77\xb4\x08\x1b\x06\x24\xc3\x68\xe1\xf2\x82\x8b\x38\x6f\x75\xfa\xf4\xca\x3c\x3f\x7e\xc1\xf1\x04\xff\x4e\x67\xf8\x73\xfc\x7b\x56\x43\x42\x8f\x2b\x0f\x00\x22\xca\x59\x30\x09\x9c\x5d\x72\xd9\xaa\x51\xc8\x2b\x67\xc7\xca\x84\xfc\x1b\x0a\xf9\x46\xd9\xb1\xc7\x37\x2f\x55\xed\x88\x92\x84\xa4\x7b\x52\x42\xea\x51\x6b\x34\x1e\xd3\x8a\x53\x10\xef\xdd\x75\x92\x96\xb2\xc0\x38\xce\x4b\xcf\x9c\xb3\xaf\xf2\x1a\x77\x35\x5f\x91\x1c\x97\x61\xfd\x9c\x5b\xb7\x14\x83\x8e\x97\x1b\xae\x3c\x8d\x8e\xf1\x9e\xca\x94\xd6\xd8\x28\xca\x43\x1b\x22\xf3\x9a\x0a\xfd\x69\xb0\xe3\x02\xac\x9c\x5d\x60\x0c\xe6\x8e\xa5\xca\x87\xb9\xa8\xf3\xb7\xde\xc4\x6c\xa9\x5d\x64\x25\xcc\xdb\xd5\x86\xfb\x43\x1f\xb6\x81\xe1\x4a\xf1\x9e\x61\x7e\xba\x90\x4f\x20\x32\xdc\xa2\x0b\x50\x0b\x88\xa1\x6e\x77\x5f\x7c\xe4\xb5\xb3\xad\xdf\x1c\x3a\x0f\x02\xe1\xa2\x64\xf5\xc6\xdd\xd3\xf5\x45\x56\x54\xdc\xf2\x58\xb1\xd9\x72\xde\xf3\x3f\x12\x42\xdf\xfe\x1e\x0e\x60\x82\xad\x32\x17\xa6\xc3\x3c\x94\x9d\xe4\x9f\xa3\xe6\x7d\x07\x00\x00\xff\xff\x2e\xb5\xd2\x23\x38\x02\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.GetByURLID.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.GetByURLID.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 653,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x5c\x52\x3d\xb3\xe2\x30\x0c\xec\xf3\x2b\xd4\x39\x61\x82\xf9\x01\x37\xcc\x15\xc7\x15\xd7\x1c\x0d\xbd\xc7\xc4\x22\x67\xce\xd8\x3c\x59\x86\xe1\xdf\xbf\xf1\x47\xf2\x98\xd7\x69\x57\xbb\xab\x58\xca\x76\x0b\xbf\x82\x41\x98\xd1\x23\x69\x46\x03\xe7\x17\x9c\x93\x75\x46\xc5\x0f\x27\xf5\xf3\xff\x0f\x38\x1c\xe1\xef\xf1\x04\xbf\x0f\x7f\x4e\xb2\x8b\xe8\x70\xe2\x0e\x20\x25\x69\x0d\xe8\x08\xd6\x8c\x19\x36\x24\x12\x39\x69\x8d\xa8\x5c\x22\xb7\x92\x89\x5c\x63\xd9\xb2\xc3\x95\x2f\xa8\x76\x92\x4c\x11\x49\x2d\x49\x11\x69\x8d\x7a\x73\x95\x22\x93\x53\xd0\x0e\xe3\x84\x7d\x07\x00\xe0\x93\x73\xf6\xd2\x2f\xca\x11\x84\x18\xc6\xd2\x69\x4c\x07\x30\x64\xbf\x41\xb2\x0f\x34\x6a\xcd\xb9\xc6\xe0\x55\x38\x5f\x71\xe2\x5e\x58\xc6\x5b\x14\xd5\x58\x1a\x33\x85\x74\x57\x9a\x48\xbf\xea\xa0\xef\x06\x23\x46\x60\x69\xcd\x08\xc2\xeb\x1b\x16\x94\x8b\xa1\xa8\x87\x65\x2c\xeb\x39\xe6\xd8\xdd\x06\x6a\xe4\x14\xfc\xa4\xb9\x6f\xe2\x55\x02\x9b\x5d\x7d\xf0\x45\x3f\x02\x59\x2e\x6f\x5e\xea\xb6\x8b\x89\x30\x1f\x4b\x69\x5e\xf6\x76\x37\x8d\xe8\x2e\x14\x6e\x99\xcc\x9b\x4c\xe4\x22\xa4\xd4\x5d\x83\xf5\x50\x01\x04\x5f\x8f\xb5\x2f\x3e\x72\xca\x9a\xd6\x6f\x0e\x95\x3f\x03\x12\x17\x25\xcb\x95\x5e\x3c\x8b\xbe\xc8\x8a\x8a\x5b\x1e\x4b\xd6\x73\xce\x7b\xfe\x43\xc2\xf7\x7b\xee\xe1\x27\x68\x6f\xbe\x46\x66\xa6\x2b\x7b\xc8\x7f\x5c\x4d\xfd\x0c\x00\x00\xff\xff\xa7\x30\x37\xe6\x8d\x02\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.Update.generated.sql": &vfsgen۰CompressedFileInfo{
			name:             "UserURLManager.Update.generated.sql",
			modTime:          time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			uncompressedSize: 192,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x34\x8d\xc1\xae\x82\x30\x14\x44\xf7\xfd\x8a\xf9\x80\x07\x1f\xf0\x5e\x58\xbc\x00\x0b\x16\x80\xc1\xba\x6e\x4a\xee\x55\x1b\x1b\xd0\xf6\x56\xe2\xdf\x1b\x40\x77\x27\x67\x32\x33\x59\x86\x72\x26\xc6\x85\x27\x0e\x56\x98\x30\xbe\x30\x26\xe7\xc9\xc4\x87\xcf\xed\x72\xfb\x43\xd5\xa3\xeb\x35\xea\xaa\xd1\xb9\x4a\x77\xb2\xc2\x48\x91\x83\x49\xc1\x47\x05\x44\x16\x28\x00\x10\x27\x9e\x51\xe0\x77\x83\x9f\xcd\x9d\xed\x73\x0e\x4e\x36\xfd\xe5\x3d\xd9\x97\xc8\x58\x41\x81\xf2\x34\x0c\x75\xa7\x8d\x6e\xda\xfa\xa8\xff\xdb\x83\x5a\xae\x1c\x3e\x3f\x8e\xd6\xf6\x8a\xb9\x23\xd8\x89\xb0\x1b\x47\xea\x1d\x00\x00\xff\xff\x52\x30\xdc\x4f\xc0\x00\x00\x00"),
		},
		"/sql/sqlite3/UserURLManager.clearTags.generated.sql": &vfsgen۰FileInfo{
			name:    "UserURLManager.clearTags.generated.sql",
			modTime: time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			content: []byte("\x2d\x2d\x20\x43\x6f\x64\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x62\x79\x20\x62\x75\x69\x6c\x64\x5f\x73\x71\x6c\x2e\x61\x77\x6b\x3b\x20\x44\x4f\x20\x4e\x4f\x54\x20\x45\x44\x49\x54\x2e\x0a\x64\x65\x6c\x65\x74\x65\x20\x66\x72\x6f\x6d\x20\x75\x73\x65\x72\x5f\x75\x72\x6c\x5f\x74\x61\x67\x73\x20\x77\x68\x65\x72\x65\x20\x75\x73\x65\x72\x5f\x75\x72\x6c\x5f\x69\x64\x20\x3d\x20\x3f\x0a"),
		},
		"/sql/sqlite3/UserURLManager.updateTags.generated.sql": &vfsgen۰FileInfo{
			name:    "UserURLManager.updateTags.generated.sql",
			modTime: time.Date(2020, 12, 16, 19, 18, 9, 999987786, time.UTC),
			content: []byte("\x2d\x2d\x20\x43\x6f\x64\x65\x20\x67\x65\x6e\x65\x72\x61\x74\x65\x64\x20\x62\x79\x20\x62\x75\x69\x6c\x64\x5f\x73\x71\x6c\x2e\x61\x77\x6b\x3b\x20\x44\x4f\x20\x4e\x4f\x54\x20\x45\x44\x49\x54\x2e\x0a\x69\x6e\x73\x65\x72\x74\x20\x69\x6e\x74\x6f\x20\x75\x73\x65\x72\x5f\x75\x72\x6c\x5f\x74\x61\x67\x73\x0a\x20\x20\x28\x75\x73\x65\x72\x5f\x75\x72\x6c\x5f\x69\x64\x2c\x20\x74\x61\x67\x5f\x69\x64\x29\x0a\x76\x61\x6c\x75\x65\x73\x0a\x20\x20\x28\x3f\x2c\x20\x3f\x29\x0a"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/sql"].(os.FileInfo),
	}
	fs["/sql"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/sql/migrations"].(os.FileInfo),
		fs["/sql/queries.sql"].(os.FileInfo),
		fs["/sql/sqlite3"].(os.FileInfo),
	}
	fs["/sql/migrations"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/sql/migrations/001-init.sql"].(os.FileInfo),
		fs["/sql/migrations/migrations-table.sql"].(os.FileInfo),
	}
	fs["/sql/sqlite3"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/sql/sqlite3/.keep"].(os.FileInfo),
		fs["/sql/sqlite3/TagManager.Create.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/TagManager.GetByID.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/TagManager.GetByName.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/URLManager.Create.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/URLManager.GetByURL.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserManager.Create.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserManager.GetByEmail.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserManager.GetByID.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserManager.UpdatePinnedCategories.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserManager.getPinnedCategories.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.Create.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.GetAll.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.GetAllAfter.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.GetAllByTags.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.GetByURLID.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.Update.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.clearTags.generated.sql"].(os.FileInfo),
		fs["/sql/sqlite3/UserURLManager.updateTags.generated.sql"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}

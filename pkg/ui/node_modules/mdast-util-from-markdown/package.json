{
  "_from": "mdast-util-from-markdown@^0.8.0",
  "_id": "mdast-util-from-markdown@0.8.1",
  "_inBundle": false,
  "_integrity": "sha512-qJXNcFcuCSPqUF0Tb0uYcFDIq67qwB3sxo9RPdf9vG8T90ViKnksFqdB/Coq2a7sTnxL/Ify2y7aIQXDkQFH0w==",
  "_location": "/mdast-util-from-markdown",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "mdast-util-from-markdown@^0.8.0",
    "name": "mdast-util-from-markdown",
    "escapedName": "mdast-util-from-markdown",
    "rawSpec": "^0.8.0",
    "saveSpec": null,
    "fetchSpec": "^0.8.0"
  },
  "_requiredBy": [
    "/remark-parse"
  ],
  "_resolved": "https://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-0.8.1.tgz",
  "_shasum": "781371d493cac11212947226190270c15dc97116",
  "_spec": "mdast-util-from-markdown@^0.8.0",
  "_where": "/home/kyle/sufr/pkg/ui/node_modules/remark-parse",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "https://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/mdast-util-from-markdown/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    }
  ],
  "dependencies": {
    "@types/mdast": "^3.0.0",
    "mdast-util-to-string": "^1.0.0",
    "micromark": "~2.10.0",
    "parse-entities": "^2.0.0"
  },
  "deprecated": false,
  "description": "mdast utility to parse markdown",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "browserify": "^17.0.0",
    "commonmark.json": "^0.29.0",
    "dtslint": "^4.0.0",
    "gzip-size-cli": "^3.0.0",
    "hast-util-to-html": "^7.0.0",
    "mdast-util-to-hast": "^10.0.0",
    "nyc": "^15.0.0",
    "prettier": "^2.0.0",
    "rehype-parse": "^7.0.0",
    "rehype-stringify": "^8.0.0",
    "remark-cli": "^9.0.0",
    "remark-preset-wooorm": "^8.0.0",
    "tape": "^5.0.0",
    "tinyify": "^3.0.0",
    "unified": "^9.0.0",
    "xo": "^0.34.0"
  },
  "files": [
    "dist/",
    "lib/",
    "index.js",
    "types/index.d.ts"
  ],
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/unified"
  },
  "homepage": "https://github.com/syntax-tree/mdast-util-from-markdown#readme",
  "keywords": [
    "unist",
    "mdast",
    "mdast-util",
    "util",
    "utility",
    "markdown",
    "markup",
    "parse",
    "syntax",
    "tree",
    "ast"
  ],
  "license": "MIT",
  "name": "mdast-util-from-markdown",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/mdast-util-from-markdown.git"
  },
  "scripts": {
    "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
    "generate": "npm run generate-dist && npm run generate-size",
    "generate-dist": "babel lib/ --out-dir dist/ --quiet --retain-lines --plugins ./micromark/script/babel-transform-constants.js; prettier dist/ --loglevel error --write",
    "generate-size": "browserify . -p tinyify -s mdast-util-from-markdown -o mdast-util-from-markdown.min.js; gzip-size mdast-util-from-markdown.min.js",
    "prepare": "if [ -d \"micromark\" ] ; then\ncd \"micromark\" && git pull\nelse\ngit clone https://github.com/micromark/micromark.git\nfi",
    "test": "npm run format && npm run generate && npm run test-coverage && npm run test-types",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test/index.js",
    "test-types": "dtslint types"
  },
  "types": "types",
  "version": "0.8.1",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "complexity": "off",
      "guard-for-in": "off",
      "unicorn/no-fn-reference-in-iterator": "off",
      "unicorn/prefer-includes": "off",
      "unicorn/prefer-number-properties": "off",
      "unicorn/prefer-optional-catch-binding": "off",
      "unicorn/prefer-set-has": "off"
    },
    "ignores": [
      "types/"
    ]
  }
}
